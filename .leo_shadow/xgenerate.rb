#@+leo-ver=4-thin
#@+node:georgesawyer.20110802081402.1955:@shadow generate.rb
#@@language ruby
#@<< require >>
#@+node:georgesawyer.20110724164426.3493:<< require >>
require 'yaml'
require 'pathname'
#@nonl
#@-node:georgesawyer.20110724164426.3493:<< require >>
#@nl
#@<< class >>
#@+node:georgesawyer.20110802081402.2218:<< class >>
#@+others
#@+node:georgesawyer.20110802081402.2219:App
class App
  #@  << class accessor >>
  #@+node:georgesawyer.20110802081402.2220:<< class accessor >>
  class << self
    #@  @+others
    #@+node:georgesawyer.20110819095338.1628:root
    attr_reader :root
    #@nonl
    #@-node:georgesawyer.20110819095338.1628:root
    #@-others
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2220:<< class accessor >>
  #@nl
  #@  << script >>
  #@+node:georgesawyer.20110802081402.2221:<< script >>
  #@@root = Pathname(__FILE__).join('..').cleanpath.realpath.dirname
  #@nonl
  #@-node:georgesawyer.20110802081402.2221:<< script >>
  #@nl
  #@  @+others
  #@-others
end
#@nonl
#@-node:georgesawyer.20110802081402.2219:App
#@+node:georgesawyer.20110802081402.2222:Lilypond
class Lilypond
  #@  << constant >>
  #@+node:georgesawyer.20110802081402.2223:<< constant >>
  LILYPOND_VERSION='2.14.1'
  INDENT = ' '*2
  #@nonl
  #@-node:georgesawyer.20110802081402.2223:<< constant >>
  #@nl
  #@  @+others
  #@+node:georgesawyer.20110802081402.2224:method
  #@+node:georgesawyer.20110819095338.1613:public class
  #@+node:georgesawyer.20110802081402.2225:rest
  def self.rest; rest='r1*' end
  #@nonl
  #@-node:georgesawyer.20110802081402.2225:rest
  #@+node:georgesawyer.20110802081402.2226:write_input_for_lilypond
  def self.write_input_for_lilypond movement, instrument, filepath
    lilypond_variable_name, mode, overall_prefix = Main.three_keys
    a=Array.new
    a.push %Q@\\version "#{LILYPOND_VERSION}"@
    a.push "% This file was autogenerated. DO NOT MODIFY.\n"
    a.push "#{lilypond_variable_name} = {"
    a.push "#{INDENT}\\#{mode} {"
    overall_prefix.each{|e| a.push "#{INDENT}#{INDENT}#{e}"} unless overall_prefix.nil?
    a.push instrument.hash.values_at(*movement.measure_keys).map{|e| e.to_s}.join "\n"
    a.push "#{INDENT}}"
    a.push "}"
    s=a.join "\n"
    f=File.new filepath, 'w'
    f.print s, "\n"
    f.close
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2226:write_input_for_lilypond
  #@-node:georgesawyer.20110819095338.1613:public class
  #@-node:georgesawyer.20110802081402.2224:method
  #@-others
end
#@nonl
#@-node:georgesawyer.20110802081402.2222:Lilypond
#@+node:georgesawyer.20110802081402.2227:Main
class Main
  #@  << class accessor >>
  #@+node:georgesawyer.20110802081402.2228:<< class accessor >>
  class << self
    #@  @+others
    #@+node:georgesawyer.20110819095338.1623:three_keys
    attr_reader :three_keys
    #@nonl
    #@-node:georgesawyer.20110819095338.1623:three_keys
    #@-others
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2228:<< class accessor >>
  #@nl
  #@  @+others
  #@+node:georgesawyer.20110802081402.2231:method
  #@+node:georgesawyer.20110819095338.1614:public class
  #@+node:georgesawyer.20110802081402.2232:extract_three_keys
  def self.extract_three_keys lilypond_variable_request
    @three_keys=[
        (lilypond_variable_request.delete 'variable'),
        (lilypond_variable_request.delete 'mode'),
        (lilypond_variable_request.delete 'prefix') ]
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2232:extract_three_keys
  #@+node:georgesawyer.20110802081402.2235:get_sole_yaml_document
  def self.get_sole_yaml_document filepath
    y=UseYaml.get_yaml_documents filepath
    raise unless 1==y.length # Must be exactly one yaml document.
    y.first
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2235:get_sole_yaml_document
  #@+node:georgesawyer.20110802081402.2236:run
  def self.run
    caller = caller(0)
  #print 'caller=';p caller
  #  get_movement_names.each do |movement_name|
    Movement.names.each do |movement_name|
      movement = Movement.new movement_name
      movement.get_filepaths.each do |filepath|
        next if movement.is_template filepath
  #      filepath=movement.directory.join filename
  ##print 'filepath.to_s=';p filepath.to_s
        lilypond_variable_request=get_sole_yaml_document filepath
        extract_three_keys lilypond_variable_request
        instrument=movement.template.clone
        run_requests instrument, lilypond_variable_request
  #      output_filepath=Pathname filepath.to_s.chomp('.yaml').concat '.rly'
        x=filepath.extname.to_s
        no_x=filepath.chomp x
        output_filepath=no_x.concat '.rly'
        Lilypond.write_input_for_lilypond movement, instrument, output_filepath
      end
    end
    run_lilypond
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2236:run
  #@+node:georgesawyer.20110802081402.2237:run_lilypond
  def self.run_lilypond
    dos_separator= '\\'
    programs_directory  = 'Program Files'
  #    programs_directory  = 'progra'
    program_location = %w[C: LilyPond usr bin lilypond-windows.exe].insert(1,programs_directory).join dos_separator
    arguments = '-dgui book.ly'
    dos_quote = '"'
  #    `#{dos_quote}#{program_location}#{dos_quote} #{arguments}`
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2237:run_lilypond
  #@+node:georgesawyer.20110802081402.2238:run_requests
  def self.run_requests instrument, lilypond_variable_request
  #print 'instrument=';p instrument
    lilypond_variable_request.each do |measure_key,measure_request_vector|
  #print 'instrument.hash=';p instrument.hash
      begin
        m=(measure=instrument.hash.fetch measure_key)
      rescue KeyError
        raise "problem with key #{measure_key}; instrument is #{instrument}"
      end
      method_name='content' # Is default.
      until measure_request_vector.empty?
        data = measure_request_vector.shift
        (method_name=data; next) if VariableRequest.methods.include? data
        VariableRequest.execute_method method_name, measure, data
      end
    end
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2238:run_requests
  #@-node:georgesawyer.20110819095338.1614:public class
  #@-node:georgesawyer.20110802081402.2231:method
  #@-others
end
#@nonl
#@-node:georgesawyer.20110802081402.2227:Main
#@+node:georgesawyer.20110802081402.2239:Measure
class Measure
  #@  << constant >>
  #@+node:georgesawyer.20110802081402.2240:<< constant >>
  BAR_SYMBOL = '|'
  FILLER = 's'
  INDENT = ' '*4
  #@nonl
  #@-node:georgesawyer.20110802081402.2240:<< constant >>
  #@nl
  #@  << accessor >>
  #@+node:georgesawyer.20110802081402.2241:<< accessor >>
  attr_reader :content, :time, :time_array
  #@nonl
  #@-node:georgesawyer.20110802081402.2241:<< accessor >>
  #@nl
  #@  << single line method >>
  #@+node:georgesawyer.20110802081402.2243:<< single line method >>
  #@+others
  #@+node:georgesawyer.20110802081402.2244:content_no_barlines=
  def content_no_barlines= s; @content = s end
  #@nonl
  #@-node:georgesawyer.20110802081402.2244:content_no_barlines=
  #@+node:georgesawyer.20110802081402.2245:content=
  def content= s; @content = "#{BAR_SYMBOL} #{s} #{BAR_SYMBOL}" end
  #@nonl
  #@-node:georgesawyer.20110802081402.2245:content=
  #@+node:georgesawyer.20110802081402.2246:prefix
  def prefix s; @content = "#{s}\n" + @content end
  #@nonl
  #@-node:georgesawyer.20110802081402.2246:prefix
  #@+node:georgesawyer.20110802081402.2247:prefix_barlines
  def prefix_barlines s; @content = "#{BAR_SYMBOL} #{s} #{BAR_SYMBOL}\n" + @content end
  #@nonl
  #@-node:georgesawyer.20110802081402.2247:prefix_barlines
  #@+node:georgesawyer.20110802081402.2248:suffix
  def suffix s; @content += "\n#{s}" end
  #@nonl
  #@-node:georgesawyer.20110802081402.2248:suffix
  #@+node:georgesawyer.20110802081402.2249:suffix_barlines
  def suffix_barlines s; @content += "\n#{BAR_SYMBOL} #{s} #{BAR_SYMBOL}" end
  #@nonl
  #@-node:georgesawyer.20110802081402.2249:suffix_barlines
  #@-others
  #@-node:georgesawyer.20110802081402.2243:<< single line method >>
  #@nl
  #@  @+others
  #@+node:georgesawyer.20110802081402.2242:method
  #@+node:georgesawyer.20110819095338.1615:public
  #@+node:georgesawyer.20110802081402.2250:initialize
  def initialize k, ts, t
    @key = k
    @time_same = ts
    @time_array=[t].flatten; t = 2==t.length ? t : (t.push 4)
    count,beat = @time_array
    @time = "#{count}/#{beat}"
    default_music = "#{BAR_SYMBOL} #{FILLER}1*#{@time} #{BAR_SYMBOL}"
    @content = default_music
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2250:initialize
  #@+node:georgesawyer.20110802081402.2252:to_s
  def to_s
    time_line = @time_same ? nil : "\\time #{@time}"
    key_line = "#{INDENT}% #{@key}"
    [time_line, @content, key_line].compact.join "\n"
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2252:to_s
  #@-node:georgesawyer.20110819095338.1615:public
  #@-node:georgesawyer.20110802081402.2242:method
  #@-others
end
#@nonl
#@-node:georgesawyer.20110802081402.2239:Measure
#@+node:georgesawyer.20110802081402.2253:Movement
class Movement
  #@  << constant >>
  #@+node:georgesawyer.20110802081402.2254:<< constant >>
  MOVEMENTS_DIRECTORY=App.root.join 'movement'
  #@nonl
  #@-node:georgesawyer.20110802081402.2254:<< constant >>
  #@nl
  #@  << accessor >>
  #@+node:georgesawyer.20110802081402.2255:<< accessor >>
  attr_reader :directory, :filepaths, :measure_keys, :template
  #@nonl
  #@-node:georgesawyer.20110802081402.2255:<< accessor >>
  #@nl
  #@  @+others
  #@+node:georgesawyer.20110802081402.2256:method
  #@+node:georgesawyer.20110819095338.1661:public class
  #@+node:georgesawyer.20110819095338.1663:names
  def self.names
  =begin
    result = Array.new
    App.root.join('movement').entries.each do |path|
      b = path.basename.to_s
      next unless path.directory? && ?.!=b[0]
      result << b
    end
    result
  =end
    App.root.join('movement').entries.select{|e| e.directory? && ?.!=e.basename.to_s[0]}.map(:basename).map{:to_s)
  #  %w[hostias]
  end
  #@nonl
  #@-node:georgesawyer.20110819095338.1663:names
  #@-node:georgesawyer.20110819095338.1661:public class
  #@+node:georgesawyer.20110819095338.1616:public
  #@+node:georgesawyer.20110802081402.2257:initialize
  def initialize s
    @directory=MOVEMENTS_DIRECTORY.join s
    @measure_keys, time_data = UseYaml.get_yaml_documents @directory.join 'template.yaml'
    @template=Template.new @measure_keys, time_data
    @filepaths= filepaths
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2257:initialize
  #@+node:georgesawyer.20110819095338.1667:is_template
  def is_template filepath
    f=filepath
    x=f.extname.to_s
    'template'==f.basename.chomp x
  end
  #@nonl
  #@-node:georgesawyer.20110819095338.1667:is_template
  #@-node:georgesawyer.20110819095338.1616:public
  #@+node:georgesawyer.20110819095338.1644:private
  #@+node:georgesawyer.20110819095338.1648:filepaths
  def filepaths
    result=Array.new
    no_extension=Array.new
    @directory.find do |path|
      b=path.basename.to_s
      Find.prune if path.directory? && ?.==b[0]
      next unless path.file?
      x = path.extname.to_s
  # Example: soprano/note.yaml
      if UseYaml.extension.member? x
        result << path
        no_extension << path.dirname.join(b.chomp x)
      end
    end
    no_extension=no_extension.sort
    raise unless no_extension.uniq==no_extension
    result.sort.uniq
  =begin
    %w[
        soprano/note.yaml  alto/note.yaml  tenor/note.yaml  bass/note.yaml  percussion/note.yaml
        tempo.yaml  non-reduction.yaml
        alto/non-reduction.yaml  tenor/non-reduction.yaml  
        organ/right/add.yaml  organ/left/add.yaml  
        ]
  =end
  end
  #@nonl
  #@-node:georgesawyer.20110819095338.1648:filepaths
  #@-node:georgesawyer.20110819095338.1644:private
  #@-node:georgesawyer.20110802081402.2256:method
  #@-others
end
#@nonl
#@-node:georgesawyer.20110802081402.2253:Movement
#@+node:georgesawyer.20110802081402.2258:Template
class Template
  #@  << constant >>
  #@+node:georgesawyer.20110802081402.2259:<< constant >>
  FIRST_MEASURE_TIME_COMPARISON_VALUE = false
  #@nonl
  #@-node:georgesawyer.20110802081402.2259:<< constant >>
  #@nl
  #@  << accessor >>
  #@+node:georgesawyer.20110802081402.2260:<< accessor >>
  attr_reader :hash, :measures
  #@nonl
  #@-node:georgesawyer.20110802081402.2260:<< accessor >>
  #@nl
  #@  @+others
  #@+node:georgesawyer.20110802081402.2261:method
  #@+node:georgesawyer.20110819095338.1617:public
  #@+node:georgesawyer.20110802081402.2262:create_measures
  def create_measures keys, time_data
    times=time_data.collect{|a| a=[a].flatten;2==a.length ? a : (a.push 4)}
    time_same=(1...times.length).map{|i| times.at(i-1)==(times.at i)}
    time_same.unshift FIRST_MEASURE_TIME_COMPARISON_VALUE
    @measures=(keys.zip time_same, times).map{|k,ts,t| (Measure.new k,ts,t).freeze}
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2262:create_measures
  #@+node:georgesawyer.20110802081402.2263:initialize
  def initialize keys, time_data
    create_measures keys, time_data
    @hash=Hash[keys.zip @measures]
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2263:initialize
  #@+node:georgesawyer.20110802081402.2264:initialize_copy
  def initialize_copy source
    keys=@hash.keys
    @hash=Hash[keys.zip @hash.values_at(*keys).map{|e| e.dup}]
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2264:initialize_copy
  #@-node:georgesawyer.20110819095338.1617:public
  #@-node:georgesawyer.20110802081402.2261:method
  #@-others
end
#@nonl
#@-node:georgesawyer.20110802081402.2258:Template
#@+node:georgesawyer.20110802081402.2265:UseYaml
class UseYaml
  #@  << class accessor >>
  #@+node:georgesawyer.20110819095338.1654:<< class accessor >>
  class << self
    #@  @+others
    #@+node:georgesawyer.20110819095338.1655:extension
    attr_reader :extension
    #@nonl
    #@-node:georgesawyer.20110819095338.1655:extension
    #@-others
  end
  #@nonl
  #@-node:georgesawyer.20110819095338.1654:<< class accessor >>
  #@nl
  #@  << script >>
  #@+node:georgesawyer.20110819095338.1657:<< script >>
  @extension = %w[yaml]
  #@nonl
  #@-node:georgesawyer.20110819095338.1657:<< script >>
  #@nl
  #@  @+others
  #@+node:georgesawyer.20110802081402.2266:method
  #@+node:georgesawyer.20110819095338.1618:public class
  #@+node:georgesawyer.20110802081402.2267:get_yaml_documents
  def self.get_yaml_documents filepath
    result=Array.new
    push_document=Proc.new{|e| result.push e}
    f=File.new filepath, 'r'
    YAML::load_documents f, &push_document
    f.close
    result
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2267:get_yaml_documents
  #@-node:georgesawyer.20110819095338.1618:public class
  #@-node:georgesawyer.20110802081402.2266:method
  #@-others
end
#@nonl
#@-node:georgesawyer.20110802081402.2265:UseYaml
#@+node:georgesawyer.20110802081402.2268:VariableRequest
class VariableRequest
  #@  << class accessor >>
  #@+node:georgesawyer.20110802081402.2269:<< class accessor >>
  class << self
    attr_reader :methods
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2269:<< class accessor >>
  #@nl
  #@  << script >>
  #@+node:georgesawyer.20110802081402.2270:<< script >>
  @methods = (
      %w[prefix suffix].product(['',   '_barlines']) + 
      %w[content      ].product(['','_no_barlines'])
  ).map!{|a| a.join}
  #@nonl
  #@-node:georgesawyer.20110802081402.2270:<< script >>
  #@nl
  #@  @+others
  #@+node:georgesawyer.20110802081402.2271:method
  #@+node:georgesawyer.20110819095338.1619:public class
  #@+node:georgesawyer.20110802081402.2272:execute_method
  def self.execute_method method_name, measure, data
    m,d = measure,data
    case method_name
    when 'content'; m.content=d
    when 'prefix'; m.prefix d
    when 'suffix'; m.suffix d
    when 'content_no_barlines'; m.content_no_barlines=d
    when 'prefix_barlines'; m.prefix_barlines d
    when 'suffix_barlines'; m.suffix_barlines d
    else raise 'what?' end
  end
  #@nonl
  #@-node:georgesawyer.20110802081402.2272:execute_method
  #@-node:georgesawyer.20110819095338.1619:public class
  #@-node:georgesawyer.20110802081402.2271:method
  #@-others
end
#@nonl
#@-node:georgesawyer.20110802081402.2268:VariableRequest
#@-others
#@nonl
#@-node:georgesawyer.20110802081402.2218:<< class >>
#@nl
#@<< overall script >>
#@+node:georgesawyer.20110802081402.2212:<< overall script >>
Main.run
#@nonl
#@-node:georgesawyer.20110802081402.2212:<< overall script >>
#@nl
#@+others
#@-others
#@nonl
#@-node:georgesawyer.20110802081402.1955:@shadow generate.rb
#@-leo
