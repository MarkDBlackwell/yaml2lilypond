Author: Mark D. Blackwell
Change dates:
Date created: July 17, 2011
Date changed: July 19, 2011
2011-07-19 Some cleanup.
2011-08-19 Rearrange documentation.
Purpose: TODO
Example usage: TODO
====================
See:
YAML (Yaml Ain't  Markup Language):
http://corelib.rubyonrails.org/classes/YAML.html
http://creedcultcode.blogspot.com/2008/05/parsing-yaml-files-in-ruby.html
http://en.wikipedia.org/wiki/YAML
http://rhnh.net/2006/06/25/yaml-tutorial
http://rhnh.net/2011/01/31/yaml-tutorial
http://www.ruby-doc.org/stdlib/libdoc/yaml/rdoc/index.html
http://www.yaml.org/YAML_for_ruby.html
http://www.yaml.org/spec/1.0/#id2491593
http://yaml4r.sourceforge.net/doc/
--------------------
For clone method for deep copies, see:
http://ruby.about.com/od/advancedruby/a/deepcopy.htm
http://blog.rubybestpractices.com/posts/rklemme/018-Complete_Class.html
====================
Examples:
--------------------
Measure key:
Where a word continues out of the measure:
--- # Measure keys
- Go-(ing)
Where a word is continued into the measure:
--- # Measure keys
- (Com)-ing
Where a syllable continues out of the measure:
--- # Measure keys
- One--
Where a syllable is continued into the measure:
--- # Measure keys
- --One
Where a syllable continues both into and out of the measure:
--- # Measure keys
- --One--
--------------------
Time signature:
--- # Measure times
# With quarter note beats:
- 3
When the beat is other than a quarter note:
- - 5
  - 2
====================
Tests:
--------------------
Code:
b=[1,[2,8]]
b.collect!{|a| a=[a].flatten;2==a.length ? a : (a.push 4)}
p b
Prints:
[[1, 4], [2, 8]]
--------------------
Code:
s=[1,[2,3],4].to_yaml
print s
tree=YAML::parse(s)
p tree.transform
YAML::parse(s){|d| print d.inspect, "\n"}
Prints:
---
- 1
- - 2
  - 3
- 4
[1, [2, 3], 4]
--------------------
Code:
k='(Requi)-emAeternam'
test_instrument[k].content_no_barlines='hello'
        print test_instrument[k].content, "\n"
test_instrument[k].content='c4 d e f'
        print test_instrument[k].content, "\n"
test_instrument[k].content="r*#{test_instrument[k].time}"
        print test_instrument[k].content, "\n"
Prints:
hello
| c4 d e f |
| r*12/4 |
--------------------
Code:
a=[1,2];a.unshift(3);p a
Prints:
[3, 1, 2]
